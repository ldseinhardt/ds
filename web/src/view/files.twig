{% extends "layout.twig" %}

{% block title %}
  {{ parent() }} :: Arquivos
{% endblock %}

{% block content %}

  <div class="col-sm-8 col-sm-offset-2 text-center">

    {% if message %}
      <div class="alert alert-dismissible alert-info">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        {{ message }}
      </div>
    {% endif %}

    <div class="panel panel-default">
      <div class="panel-body">

        <form class="form-horizontal" method="POST" enctype="multipart/form-data">
          <fieldset>
            <legend>Compartilhe suas finanças</legend>
            <div class="form-group">
              <input type="file" id="data" name="data">
              <button type="button" class="btn btn-fab" id="btn-upload">
                <i class="fa fa-upload" aria-hidden="true"></i>
              </button>
              <div id="upload-status">
                {% if response %}
                  <span class="text-{% if response.status %}success{% else %}danger{% endif %}">
                    {{ response.message }}
                  </span>
                {% else %}
                  Nenhum arquivo selecionado ...
                {% endif %}
              </div>
            </div>
          </fieldset>
        </form>

        <h3>Arquivos</h3>

        <table></table>
      </div>
    </div>
  </div>

{% endblock %}

{% block style %}
<style>
  #upload-status {
    margin-top: 25px;
  }
</style>
{% endblock %}

{% block script %}
<script>
  $(function() {
    $('table').bootstrapTable({
      url: '/files.json',
      columns: [{
        field: 'date',
        title: 'Data',
        align: 'center',
        halign: 'center',
        valign: 'middle',
        sortable: true,
        order: 'desc',
        sorter: function(a, b) {
          if (new Date(a) > new Date(b)) return 1;
          if (new Date(a) < new Date(b)) return -1;
          return 0;
        },
        formatter: function(value) {
          return new Date(value).toLocaleString();
        }
      }, {
        field: 'file',
        title: 'Opções',
        align: 'center',
        halign: 'center',
        valign: 'middle',
        formatter: function(value) {
          return '<a class="btn btn-raised btn-primary" href="/files/uploads/' + value + '" download>Download</a>';
        }
      }],
      sortName: 'date',
      sortOrder: 'desc',
      locale: 'pt-BR'
    });

    $('.upload-select').click(function() {
      $(':file').click();
    });

    $(':file').change(function() {
      if (this.files && this.files[0]) {
        var file = this.files[0];
        var reader = new FileReader();
        reader.onload = function() {
          try {
            var data = JSON.parse(this.result);
            if (validate(data)) {
              $('form').submit();
            } else {
              $('#upload-status')
                .html('<span class="text-danger">Arquivo inválido ...</span>');
            }
          } catch (e) {
            $('#upload-status')
              .html('<span class="text-danger">Arquivo inválido ...</span>');
          }
        };
        reader.readAsText(file);
      }
    });

    function validate(data) {
      /* Verifica se há pelo menos uma transação nos últimos 30d */
      if (!(data.name && data.accounts && data.accounts.length)) {
        return false;
      }
      var today = new Date();
      var u30d = new Date(new Date().setMonth(new Date().getMonth() -1));
      for (var i = 0, m = data.accounts.length; i < m; i++) {
        var account = data.accounts[i];
        for (var j = 0, n = account.transactions.length; j < n; j++) {
          var transaction = account.transactions[j];
          for (var k = 0, o = transaction.payments.length; k < o; k++) {
            var payment = transaction.payments[k];
            var date = new Date(payment.date);
            if (payment.concretized && date >= u30d && date <= today) {
              return true;
            }
          }
        }
      }
      return false;
    }
  });
</script>
{% endblock %}
